@using System.Net.Http

@inject HttpClient client

<meta charset="utf-8" />
<base href="/" />

<meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
@if (string.IsNullOrWhiteSpace(Stylesheet) == false)
{
    var domain = LocalStylesheet ? "" : "https://cdn.conesoft.net";
    <link rel="stylesheet" type="text/css" href="@(domain)/@(Stylesheet).css?v=@CdnStyleMinVersion" />
}
<link rel="stylesheet" type="text/css" href="@(AppDomain.CurrentDomain.FriendlyName).styles.css?v=@ScopedStyleVersion" />

@if (ForceRefresh)
{
    <style>
        html {
            background: black !important;
            color: black !important;
        }

            html * {
                display: none !important
            }</style>
    <meta http-equiv="refresh" content="0" />
}

@code {
    string CdnStyleMinVersion = "";
    string ScopedStyleVersion = "";

    bool ForceRefresh = false;

    [Parameter]
    public bool LocalStylesheet { get; set; } = false;

    [Parameter]
    public string Stylesheet { get; set; } = "new";

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrWhiteSpace(Stylesheet) == false && LocalStylesheet == false)
        {
            try
            {
                var cts = new CancellationTokenSource(100);
                CdnStyleMinVersion = (await client.GetStringAsync($"https://cdn.conesoft.net/{Stylesheet}.min.css.md5", cts.Token)).TrimEnd();
            }
            catch
            {
                ForceRefresh = true;
            }
        }
        else
        {
            CdnStyleMinVersion = new FileInfo($"wwwroot/{Stylesheet}.css").LastWriteTimeUtc.Ticks.ToString();
        }
        if (File.Exists($"wwwroot/{AppDomain.CurrentDomain.FriendlyName}.styles.css"))
        {
            ScopedStyleVersion = new FileInfo($"wwwroot/{AppDomain.CurrentDomain.FriendlyName}.styles.css").LastWriteTimeUtc.Ticks.ToString();
        }
        else
        {
            ScopedStyleVersion = Random.Shared.Next().ToString();
        }
    }
}